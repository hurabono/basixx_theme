<style>
      
      .popup{
            padding: 20px 40px;
            position: fixed;
            transform: translate(-50%, -50%);
            left: 50%;
            top: 50%;

            z-index: 999;
            transition: 1s !important;
            display: none;
      }

      .popup.active{
            display: block;
      }

      .popup button{
            display: block;
            margin: 0 0 20px auto;
            background-color: transparent;

      }

      @media(max-width: 767px){
            .popup{
            width: 100%;
            height: 100%;
            overflow-y: scroll;
            }
            .email_form{
            flex-direction: column;
            }
            .subscription_button{
                  padding-top: 1rem;
            }
            .subscription_title{
                  font-size: 22px;
            }
      }


</style>

{%- if section.settings.show_modalbox == true -%}
      <div class="popup {{section.settings.color_schema}} w-[400px] md:w-[600px] shadow-lg">
      <button class="btn close" style="color: {{section.settings.button_color}};">
            {% render 'icon-cancel' %}
      </button>

      {% for block in section.blocks %}
      {% case block.type %}

      {% when 'news_image' %}
      <div class="w-full bg-gray-300 h-[200px] rounded-sm my-2">
            {% if block.settings.image != blank %}
                  <img 
                  srcset="{%- if block.settings.image.width >= 550 -%}{{ block.settings.image | image_url: width: 550 }} 550w,{%- endif -%}
                  {%- if block.settings.image.width >= 720 -%}{{ block.settings.image | image_url: width: 720 }} 720w,{%- endif -%}
                  {%- if block.settings.image.width >= 990 -%}{{ block.settings.image | image_url: width: 990 }} 990w,{%- endif -%}
                  {%- if block.settings.image.width >= 1100 -%}{{ block.settings.image | image_url: width: 1100 }} 1100w,{%- endif -%}
                  {%- if block.settings.image.width >= 1500 -%}{{ block.settings.image | image_url: width: 1500 }} 1500w,{%- endif -%}
                  {%- if block.settings.image.width >= 2200 -%}{{ block.settings.image | image_url: width: 2200 }} 2200w,{%- endif -%}
                  {%- if block.settings.image.width >= 3000 -%}{{ block.settings.image | image_url: width: 3000 }} 3000w,{%- endif -%}
                  {{ block.settings.image | image_url }} {{ block.settings.image.width }}w"
                  src="{{ block.settings.image | image_url: 'master' }}"
                  sizes="(min-width: {{ settings.page_width }}px) {% if section.blocks.size == 1 %}calc({{ settings.page_width }}px - 100px){% else %}{{ settings.page_width | minus: 100 | times: 0.67 | round }}px{% endif %}, (min-width: 750px){% if section.blocks.size == 1 %} calc(100vw - 100px){% else %} 500px{% endif %}, calc(100vw - 30px)"
                  alt="{{ block.settings.image.alt | escape }}"
                  loading="lazy"
                  width="{{ block.settings.image.width }}"
                  height="{{ block.settings.image.height }}"
                  class="w-full object-center object-cover h-[200px] overflow-hidden">
            {% else %}
            {{ 'lifestyle-1' | placeholder_svg_tag: 'w-full object-center object-cover h-[200px] rounded-md overflow-hidden' }}
            {%endif%}
            
      </div>

      {% when 'title' %}
      <h1 class="subscription_title py-2 font-bold tracking-widest" style="color: {{section.settings.title_color}};"> {{ block.settings.modal_title }} </h1>

      {% when 'description' %}
      <p class="py-2 px-1" style="color: {{section.settings.description_color}};" > {{ block.settings.modal_desc }} </p>

      {% when 'email' %}
       <div class="py-2">
         {% form 'customer', class: 'w-full' %}
            
            {% if form.errors %}
                {% capture error_text %}
                  {{ form.errors | default_errors }}
                {% endcapture%}
        
                {% render 'layout-message',
                  type: 'error'
                  text: error_text
                  class: 'mb-8'
                %}
            {% endif %}

            <input type="hidden" name="contact[tags]" value="newsletter">
            <div class="email_form flex">
              <input
                    type="email"
                    placeholder="Email"
                    name="contact[email]"
                    value="{% if customer.email != blank %}{{ customer.email }}{% endif %}"
                    class="flex-1 px-3 py-2 bg-transparent appearance-none focus:outline-none border-none"
                    style="border-bottom: 1px solid {{section.settings.border_color}};"
                    required >
              <button
                    type="submit"
                    class="subscription_button {{section.settings.color_button}} mt-4 sm:mt-0 sm:mx-2 text-sm md:text-base text-center outline-none transition duration-100 tracking-widest" 
                    style="color:{{section.settings.button_color}}; margin-bottom:0;">
                    {{ 'action.subscribe' | t }}
              </button>
            </div>  

            {% if form.posted_successfully? %}
              <span class="mx-2 mt-2 text-sm text-gray-400 tracking-wider" style="color: {{section.settings.description_color}};"> ** Thanks for subscribing! </span>
            {% endif %}

         {% endform %}
        </div>

      {% endcase%}
      {%- endfor -%}


      <button class="btn accept font-bold pt-6" style="color: {{section.settings.button_color}};"> Do not show again </button>

</div>
{%- endif -%}

{%- if section.settings.show_modalbox == true -%}
<script>

document.addEventListener('shopify:section:select', function(event) {
       let popupModal = document.querySelector(".popup");
      let closedButton = document.querySelector(".btn.close");
      let acceptCookie = document.querySelector(".btn.accept");



      closedButton.addEventListener("click", function(){
                  popupModal.classList.remove("active")
      });

      acceptCookie.addEventListener("click", function(){
                  
                  const expirationDuration = 1000 * 60 * 60 * 12; // 12 hours
                  const currentTime = new Date().getTime();
                  let cookieAccepted = localStorage.getItem("accepted", currentTime);
                  const prevAcceptedExpired = cookieAccepted != undefined && currentTime - cookieAccepted > expirationDuration;

                  popupModal.classList.remove("active")
                  localStorage.setItem("accepted", currentTime)

      });


      setTimeout(
            function(){
                  const expirationDuration = 1000 * 60 * 60 * 12; // 12 hours
                  const currentTime = new Date().getTime();
                  let cookieAccepted = localStorage.getItem("accepted", currentTime);
                  const notAccepted = cookieAccepted == undefined;
                  const prevAcceptedExpired = cookieAccepted != undefined && currentTime - cookieAccepted > expirationDuration;
                  
                  if (notAccepted || prevAcceptedExpired) {
                         popupModal.classList.add("active");
                  }

            },1000);

});

      let popupModal = document.querySelector(".popup");
      let closedButton = document.querySelector(".btn.close");
      let acceptCookie = document.querySelector(".btn.accept");



      closedButton.addEventListener("click", function(){
                  popupModal.classList.remove("active")
      });

      acceptCookie.addEventListener("click", function(){
                  
                  const expirationDuration = 1000 * 60 * 60 * 12; // 12 hours
                  const currentTime = new Date().getTime();
                  let cookieAccepted = localStorage.getItem("accepted", currentTime);
                  const prevAcceptedExpired = cookieAccepted != undefined && currentTime - cookieAccepted > expirationDuration;

                  popupModal.classList.remove("active")
                  localStorage.setItem("accepted", currentTime)

      });


      setTimeout(
            function(){
                  const expirationDuration = 1000 * 60 * 60 * 12; // 12 hours
                  const currentTime = new Date().getTime();
                  let cookieAccepted = localStorage.getItem("accepted", currentTime);
                  const notAccepted = cookieAccepted == undefined;
                  const prevAcceptedExpired = cookieAccepted != undefined && currentTime - cookieAccepted > expirationDuration;
                  
                  if (notAccepted || prevAcceptedExpired) {
                         popupModal.classList.add("active");
                  }

            },5000);
      
</script>
{%- endif -%}
{% schema %}
{
            
"name": "Page Modal",
"class": "shopify-section-vue",
"settings": [
      {
            "type":"select",
            "id":"color_schema",
            "label":"Background color",
            "options":[
            {
            "value":"first_color",
            "label":"First Color"
            },
            {
            "value":"second_color",
            "label":"Second Color"
            },
            {
            "value":"third_color",
            "label":"Third Color"
            },
            {
            "value":"forth_color",
            "label":"Forth Color"
            },
            {
            "value":"fifth_color",
            "label":"Fifth Color"
            },
            {
            "value":"background_transparent",
            "label":"Transparent Color"
            }
      ],
            "default":"fifth_color"
      },
      {
        "type": "checkbox",
        "id": "show_modalbox",
        "default": false,
        "label": "Show image modal",
        "info": "Please check show modal and click a save button to set modal"
      },
      {
      "type": "color",
      "id": "title_color",
      "label": "Title color",
      "default": "#6F665D"
      },
      {
      "type": "color",
      "id": "description_color",
      "label": "Description color",
      "default": "#6F665D"
      },
      {
      "type": "color",
      "id": "button_color",
      "label": "Button color",
      "default": "#6F665D"
      },
      {
      "type": "color",
      "id": "border_color",
      "label": "Border color",
      "default": "#6F665D"
      }
],
"blocks": [
{
      "type":"news_image",
      "name":"Image",
      "limit":1,
      "settings": [
            {
            "type": "image_picker",
            "id": "image",
            "label": "Image"
            }
      ]
},
{
      "type":"title",
      "name":"Title",
      "limit":1,
      "settings": [
            {
            "type": "text",
            "id": "modal_title",
            "label": "Modal Title",
            "default": "This is the title area"
            }
      ]
},
{
      "type":"description",
      "name":"Description",
      "limit":1,
      "settings": [
            {
            "type": "textarea",
            "id": "modal_desc",
            "label": "Modal Text",
            "default": "This is the title area"
            }
      ]
},
{
      "type":"email",
      "name":"Email",
      "limit":1
}
],
 "presets": [
            {
            "name": "Modal",
            "category": "tab",
            "blocks": [
            {
            "type": "news_image"
            },
            {
            "type": "title"
            },
            {
            "type": "description"
            },
            {
            "type": "email"
            }
            ]
      }
]
}
{% endschema %}